version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fei_postgres
    environment:
      POSTGRES_DB: fei_system
      POSTGRES_USER: fei_user
      POSTGRES_PASSWORD: fei_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - fei_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fei_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - fei_network

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: fei_backend
    environment:
      - DJANGO_ENVIRONMENT=development
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=fei_system
      - DB_USER=fei_user
      - DB_PASSWORD=fei_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - backend_media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - fei_network
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: fei_frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - fei_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  backend_media:

networks:
  fei_network:
    driver: bridge