# Generated by Django 5.2.5 on 2025-09-02 01:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('category_type', models.CharField(choices=[('age', 'Por Edad'), ('level', 'Por Nivel'), ('height', 'Por Altura'), ('mixed', 'Mixta')], max_length=20, verbose_name='Tipo')),
                ('level', models.CharField(blank=True, choices=[('beginner', 'Principiante'), ('intermediate', 'Intermedio'), ('advanced', 'Avanzado'), ('professional', 'Profesional'), ('international', 'Internacional')], max_length=20, null=True, verbose_name='Nivel')),
                ('min_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Edad mínima')),
                ('max_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Edad máxima')),
                ('min_height_cm', models.PositiveIntegerField(blank=True, null=True, verbose_name='Altura mínima (cm)')),
                ('max_height_cm', models.PositiveIntegerField(blank=True, null=True, verbose_name='Altura máxima (cm)')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True, verbose_name='Máx. participantes')),
                ('entry_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Tarifa de inscripción')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['category_type', 'level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('discipline_type', models.CharField(choices=[('jumping', 'Salto'), ('dressage', 'Dressage'), ('eventing', 'Concurso Completo'), ('endurance', 'Resistencia'), ('vaulting', 'Volteo'), ('driving', 'Enganche'), ('reining', 'Reining'), ('para_dressage', 'Para-Dressage'), ('para_jumping', 'Para-Salto')], max_length=20, verbose_name='Tipo')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('max_duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duración máxima (min)')),
                ('scoring_system', models.CharField(default='points', max_length=50, verbose_name='Sistema de puntuación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('address', models.TextField(verbose_name='Dirección')),
                ('city', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('state_province', models.CharField(max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Código postal')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Sitio web')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidad')),
                ('indoor_arena', models.BooleanField(default=False, verbose_name='Arena cubierta')),
                ('outdoor_arena', models.BooleanField(default=False, verbose_name='Arena exterior')),
                ('warm_up_area', models.BooleanField(default=False, verbose_name='Área de calentamiento')),
                ('stabling', models.PositiveIntegerField(blank=True, null=True, verbose_name='Establos disponibles')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sede',
                'verbose_name_plural': 'Sedes',
                'ordering': ['country', 'city', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('short_name', models.CharField(blank=True, max_length=50, verbose_name='Nombre corto')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('start_date', models.DateTimeField(verbose_name='Fecha de inicio')),
                ('end_date', models.DateTimeField(verbose_name='Fecha de fin')),
                ('registration_start', models.DateTimeField(verbose_name='Inicio de inscripción')),
                ('registration_end', models.DateTimeField(verbose_name='Fin de inscripción')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('published', 'Publicada'), ('open_registration', 'Inscripción Abierta'), ('registration_closed', 'Inscripción Cerrada'), ('in_progress', 'En Progreso'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('postponed', 'Pospuesta')], default='draft', max_length=20, verbose_name='Estado')),
                ('competition_type', models.CharField(choices=[('national', 'Nacional'), ('international', 'Internacional'), ('regional', 'Regional'), ('local', 'Local'), ('championship', 'Campeonato'), ('friendly', 'Amistoso')], max_length=20, verbose_name='Tipo')),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True, verbose_name='Máx. participantes')),
                ('max_horses_per_rider', models.PositiveIntegerField(default=1, verbose_name='Máx. caballos por jinete')),
                ('entry_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Tarifa de inscripción')),
                ('late_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Recargo por inscripción tardía')),
                ('requires_qualification', models.BooleanField(default=False, verbose_name='Requiere clasificación')),
                ('is_championship', models.BooleanField(default=False, verbose_name='Es campeonato')),
                ('points_for_ranking', models.BooleanField(default=True, verbose_name='Otorga puntos para ranking')),
                ('rules', models.TextField(blank=True, verbose_name='Reglamento')),
                ('prize_money', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Premio en dinero')),
                ('sponsors', models.TextField(blank=True, verbose_name='Patrocinadores')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(to='competitions.category', verbose_name='Categorías')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Organizador')),
                ('disciplines', models.ManyToManyField(to='competitions.discipline', verbose_name='Disciplinas')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitions.venue', verbose_name='Sede')),
            ],
            options={
                'verbose_name': 'Competencia',
                'verbose_name_plural': 'Competencias',
                'ordering': ['-start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CompetitionSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(verbose_name='Hora de inicio')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('estimated_duration', models.DurationField(blank=True, null=True, verbose_name='Duración estimada')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('schedule_type', models.CharField(choices=[('competition_start', 'Inicio de Competencia'), ('discipline_start', 'Inicio de Disciplina'), ('category_start', 'Inicio de Categoría'), ('break', 'Descanso'), ('lunch', 'Almuerzo'), ('awards', 'Premiación'), ('special_event', 'Evento Especial')], max_length=20, verbose_name='Tipo')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Ubicación específica')),
                ('is_published', models.BooleanField(default=True, verbose_name='Publicado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='competitions.category', verbose_name='Categoría')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='competitions.competition')),
                ('discipline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='competitions.discipline', verbose_name='Disciplina')),
            ],
            options={
                'verbose_name': 'Programación',
                'verbose_name_plural': 'Programaciones',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Horse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('registration_number', models.CharField(max_length=50, unique=True, verbose_name='Número de registro')),
                ('breed', models.CharField(max_length=100, verbose_name='Raza')),
                ('color', models.CharField(max_length=50, verbose_name='Color')),
                ('gender', models.CharField(choices=[('stallion', 'Semental'), ('mare', 'Yegua'), ('gelding', 'Caballo castrado')], max_length=10, verbose_name='Sexo')),
                ('birth_date', models.DateField(verbose_name='Fecha de nacimiento')),
                ('height', models.PositiveIntegerField(help_text='Altura en centímetros', verbose_name='Altura (cm)')),
                ('microchip_number', models.CharField(blank=True, max_length=50, verbose_name='Número de microchip')),
                ('passport_number', models.CharField(blank=True, max_length=50, verbose_name='Número de pasaporte')),
                ('is_fei_registered', models.BooleanField(default=False, verbose_name='Registrado FEI')),
                ('fei_id', models.CharField(blank=True, max_length=20, verbose_name='ID FEI')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_available_for_competition', models.BooleanField(default=True, verbose_name='Disponible para competencia')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_horses', to=settings.AUTH_USER_MODEL, verbose_name='Propietario')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trained_horses', to=settings.AUTH_USER_MODEL, verbose_name='Entrenador')),
            ],
            options={
                'verbose_name': 'Caballo',
                'verbose_name_plural': 'Caballos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompetitionStaff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('chief_judge', 'Juez Principal'), ('judge', 'Juez'), ('technical_delegate', 'Delegado Técnico'), ('steward', 'Comisario'), ('veterinarian', 'Veterinario'), ('course_designer', 'Diseñador de Pista'), ('announcer', 'Locutor'), ('timekeeper', 'Cronometrador'), ('scorer', 'Anotador')], max_length=30, verbose_name='Rol')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Confirmado')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('assigned_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de asignación')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='competitions.competition')),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Miembro del personal')),
            ],
            options={
                'verbose_name': 'Personal de Competencia',
                'verbose_name_plural': 'Personal de Competencias',
                'unique_together': {('competition', 'staff_member', 'role')},
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bib_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número de dorsal')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de inscripción')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Confirmado')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Pagado')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Contacto de emergencia')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono de emergencia')),
                ('special_requirements', models.TextField(blank=True, verbose_name='Requerimientos especiales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitions.category', verbose_name='Categoría')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='competitions.competition')),
                ('horse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitions.horse', verbose_name='Caballo')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Jinete')),
            ],
            options={
                'verbose_name': 'Participante',
                'verbose_name_plural': 'Participantes',
                'ordering': ['bib_number', 'rider__last_name'],
                'unique_together': {('competition', 'rider', 'horse', 'category')},
            },
        ),
    ]
