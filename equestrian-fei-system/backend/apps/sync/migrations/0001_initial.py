# Generated by Django 5.0.6 on 2025-10-29 18:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('backup_type', models.CharField(choices=[('full', 'Completo'), ('incremental', 'Incremental'), ('differential', 'Diferencial'), ('schema', 'Solo Esquema'), ('data', 'Solo Datos')], max_length=20, verbose_name='Tipo de respaldo')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('running', 'Ejecutándose'), ('completed', 'Completado'), ('failed', 'Fallido')], default='pending', max_length=20, verbose_name='Estado')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del respaldo')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('file_path', models.CharField(max_length=500, verbose_name='Ruta del archivo')),
                ('file_size', models.BigIntegerField(default=0, verbose_name='Tamaño del archivo (bytes)')),
                ('checksum', models.CharField(blank=True, max_length=255, verbose_name='Checksum')),
                ('total_tables', models.IntegerField(default=0, verbose_name='Total de tablas')),
                ('total_records', models.BigIntegerField(default=0, verbose_name='Total de registros')),
                ('compression_ratio', models.FloatField(default=0, verbose_name='Ratio de compresión')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Iniciado en')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completado en')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_backups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Respaldo',
                'verbose_name_plural': 'Registros de Respaldos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CacheEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cache_key', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Clave de cache')),
                ('cache_type', models.CharField(choices=[('api_response', 'Respuesta API'), ('query_result', 'Resultado de Consulta'), ('computed_value', 'Valor Calculado'), ('user_session', 'Sesión de Usuario'), ('competition_data', 'Datos de Competencia')], max_length=20, verbose_name='Tipo de cache')),
                ('data', models.JSONField(verbose_name='Datos en cache')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(db_index=True, verbose_name='Expira en')),
                ('last_accessed', models.DateTimeField(auto_now=True, verbose_name='Último acceso')),
                ('size_bytes', models.IntegerField(default=0, verbose_name='Tamaño en bytes')),
                ('access_count', models.IntegerField(default=0, verbose_name='Contador de accesos')),
                ('tags', models.JSONField(default=list, verbose_name='Tags para invalidación')),
            ],
            options={
                'verbose_name': 'Entrada de Cache',
                'verbose_name_plural': 'Entradas de Cache',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['cache_key'], name='sync_cachee_cache_k_89e53a_idx'), models.Index(fields=['expires_at'], name='sync_cachee_expires_7c9381_idx'), models.Index(fields=['cache_type'], name='sync_cachee_cache_t_7d5881_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExternalSystem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del sistema')),
                ('system_type', models.CharField(choices=[('fei', 'FEI Database'), ('national_federation', 'Federación Nacional'), ('scoring_system', 'Sistema de Puntuación'), ('timing_system', 'Sistema de Cronometraje'), ('streaming', 'Sistema de Streaming'), ('social_media', 'Redes Sociales'), ('payment', 'Sistema de Pagos'), ('other', 'Otro')], max_length=20, verbose_name='Tipo de sistema')),
                ('api_url', models.URLField(blank=True, null=True, verbose_name='URL de API')),
                ('api_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='API Key')),
                ('api_secret', models.CharField(blank=True, max_length=255, null=True, verbose_name='API Secret')),
                ('config', models.JSONField(default=dict, verbose_name='Configuración adicional')),
                ('status', models.CharField(choices=[('active', 'Activo'), ('inactive', 'Inactivo'), ('error', 'Error'), ('maintenance', 'Mantenimiento')], default='inactive', max_length=20, verbose_name='Estado')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Habilitado')),
                ('sync_interval', models.IntegerField(default=300, verbose_name='Intervalo de sincronización (segundos)')),
                ('last_sync', models.DateTimeField(blank=True, null=True, verbose_name='Última sincronización')),
                ('next_sync', models.DateTimeField(blank=True, null=True, verbose_name='Próxima sincronización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_external_systems', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sistema Externo',
                'verbose_name_plural': 'Sistemas Externos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SyncAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('create', 'Crear'), ('update', 'Actualizar'), ('delete', 'Eliminar'), ('score_update', 'Actualizar Puntuación')], max_length=20, verbose_name='Tipo de acción')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', max_length=10, verbose_name='Prioridad')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('conflict', 'Conflicto')], default='pending', max_length=20, verbose_name='Estado')),
                ('object_id', models.UUIDField()),
                ('data', models.JSONField(verbose_name='Datos de la acción')),
                ('original_data', models.JSONField(blank=True, null=True, verbose_name='Datos originales')),
                ('retry_count', models.IntegerField(default=0, verbose_name='Número de reintentos')),
                ('max_retries', models.IntegerField(default=3, verbose_name='Máximo reintentos')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Procesado en')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Acción de Sincronización',
                'verbose_name_plural': 'Acciones de Sincronización',
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConflictResolution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('strategy', models.CharField(choices=[('server_wins', 'Servidor Gana'), ('client_wins', 'Cliente Gana'), ('last_write_wins', 'Última Escritura Gana'), ('manual_resolution', 'Resolución Manual'), ('merge', 'Fusionar')], max_length=20, verbose_name='Estrategia de resolución')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('resolved', 'Resuelto'), ('rejected', 'Rechazado')], default='pending', max_length=20, verbose_name='Estado')),
                ('server_data', models.JSONField(verbose_name='Datos del servidor')),
                ('client_data', models.JSONField(verbose_name='Datos del cliente')),
                ('resolved_data', models.JSONField(blank=True, null=True, verbose_name='Datos resueltos')),
                ('conflict_fields', models.JSONField(default=list, verbose_name='Campos en conflicto')),
                ('resolution_notes', models.TextField(blank=True, verbose_name='Notas de resolución')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resuelto en')),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_conflicts', to=settings.AUTH_USER_MODEL)),
                ('sync_action', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conflict_resolution', to='sync.syncaction')),
            ],
            options={
                'verbose_name': 'Resolución de Conflicto',
                'verbose_name_plural': 'Resoluciones de Conflictos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_type', models.CharField(choices=[('import', 'Importación'), ('export', 'Exportación'), ('sync', 'Sincronización'), ('backup', 'Respaldo'), ('validation', 'Validación')], max_length=20, verbose_name='Tipo de trabajo')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', max_length=10, verbose_name='Prioridad')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del trabajo')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('config', models.JSONField(default=dict, verbose_name='Configuración del trabajo')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('running', 'Ejecutándose'), ('completed', 'Completado'), ('failed', 'Fallido'), ('cancelled', 'Cancelado'), ('retrying', 'Reintentando')], default='pending', max_length=20, verbose_name='Estado')),
                ('progress', models.IntegerField(default=0, verbose_name='Progreso (%)')),
                ('total_records', models.IntegerField(default=0, verbose_name='Total de registros')),
                ('processed_records', models.IntegerField(default=0, verbose_name='Registros procesados')),
                ('success_count', models.IntegerField(default=0, verbose_name='Exitosos')),
                ('error_count', models.IntegerField(default=0, verbose_name='Con errores')),
                ('log', models.TextField(blank=True, verbose_name='Log de ejecución')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Programado para')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Iniciado en')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completado en')),
                ('retry_count', models.IntegerField(default=0, verbose_name='Número de reintentos')),
                ('max_retries', models.IntegerField(default=3, verbose_name='Máximo reintentos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_sync_jobs', to=settings.AUTH_USER_MODEL)),
                ('external_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_jobs', to='sync.externalsystem')),
            ],
            options={
                'verbose_name': 'Trabajo de Sincronización',
                'verbose_name_plural': 'Trabajos de Sincronización',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=255, verbose_name='ID del dispositivo')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Hora de inicio')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En Progreso'), ('completed', 'Completado'), ('failed', 'Fallido')], default='pending', max_length=20, verbose_name='Estado')),
                ('actions_count', models.IntegerField(default=0, verbose_name='Total de acciones')),
                ('successful_actions', models.IntegerField(default=0, verbose_name='Acciones exitosas')),
                ('failed_actions', models.IntegerField(default=0, verbose_name='Acciones fallidas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesión de Sincronización',
                'verbose_name_plural': 'Sesiones de Sincronización',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='syncaction',
            name='sync_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_actions', to='sync.syncsession'),
        ),
        migrations.CreateModel(
            name='DataMap',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('local_model', models.CharField(max_length=100, verbose_name='Modelo local')),
                ('local_field', models.CharField(max_length=100, verbose_name='Campo local')),
                ('external_field', models.CharField(max_length=100, verbose_name='Campo externo')),
                ('is_required', models.BooleanField(default=False, verbose_name='Requerido')),
                ('is_key_field', models.BooleanField(default=False, verbose_name='Campo clave')),
                ('data_type', models.CharField(max_length=50, verbose_name='Tipo de datos')),
                ('transformation_rule', models.TextField(blank=True, verbose_name='Regla de transformación')),
                ('default_value', models.CharField(blank=True, max_length=255, verbose_name='Valor por defecto')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_maps', to='sync.externalsystem')),
            ],
            options={
                'verbose_name': 'Mapeo de Datos',
                'verbose_name_plural': 'Mapeos de Datos',
                'ordering': ['local_model', 'local_field'],
                'unique_together': {('external_system', 'local_model', 'local_field')},
            },
        ),
        migrations.CreateModel(
            name='OfflineStorage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=255, verbose_name='ID del dispositivo')),
                ('storage_type', models.CharField(choices=[('score_entry', 'Entrada de Puntuación'), ('evaluation', 'Evaluación'), ('participant_data', 'Datos de Participante'), ('competition_data', 'Datos de Competencia'), ('user_action', 'Acción de Usuario')], max_length=20, verbose_name='Tipo de almacenamiento')),
                ('storage_key', models.CharField(max_length=255, verbose_name='Clave de almacenamiento')),
                ('data', models.JSONField(verbose_name='Datos almacenados')),
                ('metadata', models.JSONField(default=dict, verbose_name='Metadatos')),
                ('version', models.IntegerField(default=1, verbose_name='Versión')),
                ('checksum', models.CharField(max_length=255, verbose_name='Checksum')),
                ('is_synced', models.BooleanField(default=False, verbose_name='Sincronizado')),
                ('sync_priority', models.IntegerField(default=5, verbose_name='Prioridad de sincronización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed', models.DateTimeField(auto_now=True, verbose_name='Último acceso')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offline_storage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Almacenamiento Offline',
                'verbose_name_plural': 'Almacenamientos Offline',
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['user', 'device_id'], name='sync_offlin_user_id_c522e3_idx'), models.Index(fields=['storage_type'], name='sync_offlin_storage_df21ba_idx'), models.Index(fields=['is_synced'], name='sync_offlin_is_sync_0269f4_idx'), models.Index(fields=['sync_priority'], name='sync_offlin_sync_pr_aa76a8_idx')],
                'unique_together': {('user', 'device_id', 'storage_key')},
            },
        ),
        migrations.CreateModel(
            name='SyncRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('external_id', models.CharField(max_length=255, verbose_name='ID externo')),
                ('action', models.CharField(choices=[('create', 'Crear'), ('update', 'Actualizar'), ('delete', 'Eliminar'), ('skip', 'Omitir')], max_length=10, verbose_name='Acción')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('success', 'Exitoso'), ('failed', 'Fallido'), ('skipped', 'Omitido')], default='pending', max_length=10, verbose_name='Estado')),
                ('local_data', models.JSONField(blank=True, null=True, verbose_name='Datos locales')),
                ('external_data', models.JSONField(blank=True, null=True, verbose_name='Datos externos')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Procesado en')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('sync_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_records', to='sync.syncjob')),
            ],
            options={
                'verbose_name': 'Registro de Sincronización',
                'verbose_name_plural': 'Registros de Sincronización',
                'ordering': ['-created_at'],
                'unique_together': {('sync_job', 'content_type', 'external_id')},
            },
        ),
        migrations.AddIndex(
            model_name='syncsession',
            index=models.Index(fields=['user', 'device_id'], name='sync_syncse_user_id_4a3c95_idx'),
        ),
        migrations.AddIndex(
            model_name='syncsession',
            index=models.Index(fields=['status'], name='sync_syncse_status_25e40e_idx'),
        ),
        migrations.AddIndex(
            model_name='syncsession',
            index=models.Index(fields=['start_time'], name='sync_syncse_start_t_f96e76_idx'),
        ),
        migrations.AddIndex(
            model_name='syncaction',
            index=models.Index(fields=['sync_session', 'status'], name='sync_syncac_sync_se_1aaaab_idx'),
        ),
        migrations.AddIndex(
            model_name='syncaction',
            index=models.Index(fields=['action_type'], name='sync_syncac_action__dcabf1_idx'),
        ),
        migrations.AddIndex(
            model_name='syncaction',
            index=models.Index(fields=['priority', 'status'], name='sync_syncac_priorit_3085f2_idx'),
        ),
        migrations.AddIndex(
            model_name='syncaction',
            index=models.Index(fields=['content_type', 'object_id'], name='sync_syncac_content_b5833b_idx'),
        ),
    ]
