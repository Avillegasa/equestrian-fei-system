# Generated by Django 5.2.5 on 2025-09-02 01:17

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competitions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompetitionRanking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ranking_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de clasificación')),
                ('is_final', models.BooleanField(default=False, verbose_name='Es clasificación final')),
                ('is_published', models.BooleanField(default=False, verbose_name='Publicada')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='competitions.category')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='competitions.competition')),
            ],
            options={
                'verbose_name': 'Clasificación de Competencia',
                'verbose_name_plural': 'Clasificaciones de Competencias',
                'ordering': ['-ranking_date'],
                'unique_together': {('competition', 'category')},
            },
        ),
        migrations.CreateModel(
            name='ScoreCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En Progreso'), ('completed', 'Completada'), ('validated', 'Validada'), ('published', 'Publicada'), ('disputed', 'En Disputa')], default='pending', max_length=20, verbose_name='Estado')),
                ('round_number', models.PositiveIntegerField(default=1, verbose_name='Número de ronda')),
                ('attempt_number', models.PositiveIntegerField(default=1, verbose_name='Número de intento')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de inicio')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('execution_time', models.DurationField(blank=True, null=True, verbose_name='Tiempo de ejecución')),
                ('technical_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación técnica')),
                ('artistic_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación artística')),
                ('time_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación de tiempo')),
                ('penalty_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Penalizaciones')),
                ('bonus_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Bonificaciones')),
                ('raw_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación bruta')),
                ('final_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación final')),
                ('percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Porcentaje')),
                ('notes', models.TextField(blank=True, verbose_name='Notas del juez')),
                ('weather_conditions', models.CharField(blank=True, max_length=100, verbose_name='Condiciones climáticas')),
                ('arena_conditions', models.CharField(blank=True, max_length=100, verbose_name='Condiciones de la arena')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de validación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_cards_judged', to=settings.AUTH_USER_MODEL)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_cards', to='competitions.participant')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tarjeta de Puntuación',
                'verbose_name_plural': 'Tarjetas de Puntuación',
                'ordering': ['-created_at'],
                'unique_together': {('participant', 'judge', 'round_number', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='JumpingFault',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fault_type', models.CharField(choices=[('knockdown', 'Derribo'), ('refusal', 'Desobediencia'), ('fall_horse', 'Caída del caballo'), ('fall_rider', 'Caída del jinete'), ('wrong_course', 'Recorrido erróneo'), ('time_exceeded', 'Tiempo excedido'), ('elimination', 'Eliminación')], max_length=20, verbose_name='Tipo de falta')),
                ('obstacle_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número de obstáculo')),
                ('penalty_points', models.DecimalField(decimal_places=1, default=4.0, max_digits=5, verbose_name='Puntos de penalización')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Momento de la falta')),
                ('score_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jumping_faults', to='scoring.scorecard')),
            ],
            options={
                'verbose_name': 'Falta de Salto',
                'verbose_name_plural': 'Faltas de Salto',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ScoringCriteria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del criterio')),
                ('code', models.CharField(max_length=20, verbose_name='Código')),
                ('criteria_type', models.CharField(choices=[('technical', 'Técnico'), ('artistic', 'Artístico'), ('time', 'Tiempo'), ('penalty', 'Penalización'), ('bonus', 'Bonus'), ('overall', 'General')], max_length=20, verbose_name='Tipo de criterio')),
                ('min_score', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Puntuación mínima')),
                ('max_score', models.DecimalField(decimal_places=2, default=10, max_digits=6, verbose_name='Puntuación máxima')),
                ('weight', models.DecimalField(decimal_places=3, default=1.0, max_digits=5, verbose_name='Peso del criterio')),
                ('is_required', models.BooleanField(default=True, verbose_name='Es requerido')),
                ('is_time_based', models.BooleanField(default=False, verbose_name='Basado en tiempo')),
                ('allow_decimals', models.BooleanField(default=True, verbose_name='Permite decimales')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Orden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_criteria', to='competitions.discipline')),
            ],
            options={
                'verbose_name': 'Criterio de Puntuación',
                'verbose_name_plural': 'Criterios de Puntuación',
                'ordering': ['discipline', 'order', 'name'],
                'unique_together': {('discipline', 'code')},
            },
        ),
        migrations.CreateModel(
            name='EventingPhase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phase_type', models.CharField(choices=[('dressage', 'Dressage'), ('cross_country', 'Cross Country'), ('show_jumping', 'Salto')], max_length=20, verbose_name='Tipo de fase')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de inicio')),
                ('finish_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de finalización')),
                ('optimum_time', models.DurationField(blank=True, null=True, verbose_name='Tiempo óptimo')),
                ('actual_time', models.DurationField(blank=True, null=True, verbose_name='Tiempo real')),
                ('dressage_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación dressage')),
                ('jumping_penalties', models.DecimalField(decimal_places=1, default=0, max_digits=6, verbose_name='Penalizaciones salto')),
                ('time_penalties', models.DecimalField(decimal_places=1, default=0, max_digits=6, verbose_name='Penalizaciones tiempo')),
                ('total_penalties', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Penalizaciones totales')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Completada')),
                ('is_eliminated', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('elimination_reason', models.CharField(blank=True, max_length=200, verbose_name='Razón de eliminación')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventing_phases', to='competitions.participant')),
            ],
            options={
                'verbose_name': 'Fase de Eventing',
                'verbose_name_plural': 'Fases de Eventing',
                'ordering': ['phase_type'],
                'unique_together': {('participant', 'phase_type')},
            },
        ),
        migrations.CreateModel(
            name='RankingEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.PositiveIntegerField(verbose_name='Posición')),
                ('total_score', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Puntuación total')),
                ('total_penalties', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Penalizaciones totales')),
                ('final_score', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Puntuación final')),
                ('technical_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación técnica')),
                ('artistic_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación artística')),
                ('time_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación de tiempo')),
                ('best_round_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Mejor ronda')),
                ('rounds_completed', models.PositiveIntegerField(default=0, verbose_name='Rondas completadas')),
                ('is_eliminated', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('elimination_reason', models.CharField(blank=True, max_length=200, verbose_name='Razón de eliminación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_entries', to='competitions.participant')),
                ('ranking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='scoring.competitionranking')),
            ],
            options={
                'verbose_name': 'Entrada de Clasificación',
                'verbose_name_plural': 'Entradas de Clasificación',
                'ordering': ['position'],
                'unique_together': {('ranking', 'participant')},
            },
        ),
        migrations.CreateModel(
            name='DressageMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('movement_number', models.PositiveIntegerField(verbose_name='Número de movimiento')),
                ('movement_type', models.CharField(choices=[('halt', 'Parada'), ('walk', 'Paso'), ('trot', 'Trote'), ('canter', 'Galope'), ('transition', 'Transición'), ('figure', 'Figura'), ('lateral', 'Movimiento Lateral'), ('collection', 'Reunión'), ('extension', 'Extensión')], max_length=20, verbose_name='Tipo de movimiento')),
                ('description', models.CharField(max_length=200, verbose_name='Descripción del movimiento')),
                ('score', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Puntuación')),
                ('coefficient', models.DecimalField(decimal_places=1, default=1.0, max_digits=3, verbose_name='Coeficiente')),
                ('weighted_score', models.DecimalField(decimal_places=1, default=0, max_digits=4, verbose_name='Puntuación ponderada')),
                ('judge_comments', models.TextField(blank=True, verbose_name='Comentarios del juez')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dressage_movements', to='scoring.scorecard')),
            ],
            options={
                'verbose_name': 'Movimiento de Dressage',
                'verbose_name_plural': 'Movimientos de Dressage',
                'ordering': ['movement_number'],
                'unique_together': {('score_card', 'movement_number')},
            },
        ),
        migrations.CreateModel(
            name='IndividualScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('raw_score', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Puntuación bruta')),
                ('weighted_score', models.DecimalField(decimal_places=3, default=0, max_digits=8, verbose_name='Puntuación ponderada')),
                ('comments', models.TextField(blank=True, verbose_name='Comentarios')),
                ('time_value', models.DurationField(blank=True, null=True, verbose_name='Valor de tiempo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_scores', to='scoring.scorecard')),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_scores', to='scoring.scoringcriteria')),
            ],
            options={
                'verbose_name': 'Puntuación Individual',
                'verbose_name_plural': 'Puntuaciones Individuales',
                'unique_together': {('score_card', 'criteria')},
            },
        ),
    ]
